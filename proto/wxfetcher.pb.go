// Code generated by protoc-gen-go. DO NOT EDIT.
// source: wxfetcher.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type FetchURLRequest struct {
	Url                  string   `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FetchURLRequest) Reset()         { *m = FetchURLRequest{} }
func (m *FetchURLRequest) String() string { return proto.CompactTextString(m) }
func (*FetchURLRequest) ProtoMessage()    {}
func (*FetchURLRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6cc394fee09db7d6, []int{0}
}

func (m *FetchURLRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FetchURLRequest.Unmarshal(m, b)
}
func (m *FetchURLRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FetchURLRequest.Marshal(b, m, deterministic)
}
func (m *FetchURLRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FetchURLRequest.Merge(m, src)
}
func (m *FetchURLRequest) XXX_Size() int {
	return xxx_messageInfo_FetchURLRequest.Size(m)
}
func (m *FetchURLRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FetchURLRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FetchURLRequest proto.InternalMessageInfo

func (m *FetchURLRequest) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

type FetchURLResponse struct {
	Key                  string       `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Meta                 *ArticleMeta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *FetchURLResponse) Reset()         { *m = FetchURLResponse{} }
func (m *FetchURLResponse) String() string { return proto.CompactTextString(m) }
func (*FetchURLResponse) ProtoMessage()    {}
func (*FetchURLResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_6cc394fee09db7d6, []int{1}
}

func (m *FetchURLResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FetchURLResponse.Unmarshal(m, b)
}
func (m *FetchURLResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FetchURLResponse.Marshal(b, m, deterministic)
}
func (m *FetchURLResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FetchURLResponse.Merge(m, src)
}
func (m *FetchURLResponse) XXX_Size() int {
	return xxx_messageInfo_FetchURLResponse.Size(m)
}
func (m *FetchURLResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FetchURLResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FetchURLResponse proto.InternalMessageInfo

func (m *FetchURLResponse) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *FetchURLResponse) GetMeta() *ArticleMeta {
	if m != nil {
		return m.Meta
	}
	return nil
}

type ArticleMeta struct {
	Link                 string   `protobuf:"bytes,1,opt,name=link,proto3" json:"link,omitempty"`
	Title                string   `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Author               string   `protobuf:"bytes,3,opt,name=author,proto3" json:"author,omitempty"`
	Timestamp            int64    `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Image                string   `protobuf:"bytes,5,opt,name=image,proto3" json:"image,omitempty"`
	Brief                string   `protobuf:"bytes,6,opt,name=brief,proto3" json:"brief,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ArticleMeta) Reset()         { *m = ArticleMeta{} }
func (m *ArticleMeta) String() string { return proto.CompactTextString(m) }
func (*ArticleMeta) ProtoMessage()    {}
func (*ArticleMeta) Descriptor() ([]byte, []int) {
	return fileDescriptor_6cc394fee09db7d6, []int{2}
}

func (m *ArticleMeta) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ArticleMeta.Unmarshal(m, b)
}
func (m *ArticleMeta) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ArticleMeta.Marshal(b, m, deterministic)
}
func (m *ArticleMeta) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ArticleMeta.Merge(m, src)
}
func (m *ArticleMeta) XXX_Size() int {
	return xxx_messageInfo_ArticleMeta.Size(m)
}
func (m *ArticleMeta) XXX_DiscardUnknown() {
	xxx_messageInfo_ArticleMeta.DiscardUnknown(m)
}

var xxx_messageInfo_ArticleMeta proto.InternalMessageInfo

func (m *ArticleMeta) GetLink() string {
	if m != nil {
		return m.Link
	}
	return ""
}

func (m *ArticleMeta) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *ArticleMeta) GetAuthor() string {
	if m != nil {
		return m.Author
	}
	return ""
}

func (m *ArticleMeta) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *ArticleMeta) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *ArticleMeta) GetBrief() string {
	if m != nil {
		return m.Brief
	}
	return ""
}

func init() {
	proto.RegisterType((*FetchURLRequest)(nil), "FetchURLRequest")
	proto.RegisterType((*FetchURLResponse)(nil), "FetchURLResponse")
	proto.RegisterType((*ArticleMeta)(nil), "ArticleMeta")
}

func init() { proto.RegisterFile("wxfetcher.proto", fileDescriptor_6cc394fee09db7d6) }

var fileDescriptor_6cc394fee09db7d6 = []byte{
	// 256 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x90, 0x4f, 0x4b, 0xc3, 0x40,
	0x10, 0xc5, 0x8d, 0xf9, 0xa3, 0x99, 0x0a, 0x8d, 0x83, 0xc8, 0x22, 0x1e, 0x42, 0xbc, 0xe4, 0x14,
	0xb0, 0xde, 0x05, 0x3d, 0xe4, 0xa4, 0x97, 0x05, 0x11, 0xbc, 0x6d, 0xcb, 0xd4, 0x2e, 0x49, 0x9a,
	0xb8, 0x99, 0x60, 0xfb, 0x51, 0xfc, 0xb6, 0xb2, 0x9b, 0x96, 0x96, 0x9e, 0xf6, 0xbd, 0xdf, 0x3e,
	0x1e, 0xcc, 0x83, 0xe9, 0xef, 0x66, 0x49, 0xbc, 0x58, 0x91, 0x29, 0x3a, 0xd3, 0x72, 0x9b, 0x3d,
	0xc0, 0xb4, 0xb4, 0xe0, 0x43, 0xbe, 0x49, 0xfa, 0x19, 0xa8, 0x67, 0x4c, 0xc0, 0x1f, 0x4c, 0x2d,
	0xbc, 0xd4, 0xcb, 0x63, 0x69, 0x65, 0x56, 0x42, 0x72, 0x08, 0xf5, 0x5d, 0xbb, 0xee, 0xc9, 0xa6,
	0x2a, 0xda, 0xee, 0x53, 0x15, 0x6d, 0x31, 0x85, 0xa0, 0x21, 0x56, 0xe2, 0x3c, 0xf5, 0xf2, 0xc9,
	0xec, 0xaa, 0x78, 0x31, 0xac, 0x17, 0x35, 0xbd, 0x13, 0x2b, 0xe9, 0x7e, 0xb2, 0x3f, 0x0f, 0x26,
	0x47, 0x14, 0x11, 0x82, 0x5a, 0xaf, 0xab, 0x5d, 0x89, 0xd3, 0x78, 0x03, 0x21, 0x6b, 0xae, 0xc9,
	0xd5, 0xc4, 0x72, 0x34, 0x78, 0x0b, 0x91, 0x1a, 0x78, 0xd5, 0x1a, 0xe1, 0x3b, 0xbc, 0x73, 0x78,
	0x0f, 0x31, 0xeb, 0x86, 0x7a, 0x56, 0x4d, 0x27, 0x82, 0xd4, 0xcb, 0x7d, 0x79, 0x00, 0xb6, 0x4b,
	0x37, 0xea, 0x9b, 0x44, 0x38, 0x76, 0x39, 0x63, 0xe9, 0xdc, 0x68, 0x5a, 0x8a, 0x68, 0xa4, 0xce,
	0xcc, 0x9e, 0x21, 0xfe, 0xdc, 0x94, 0xe3, 0x36, 0xf8, 0x08, 0x97, 0xfb, 0x83, 0x31, 0x29, 0x4e,
	0x06, 0xba, 0xbb, 0x2e, 0x4e, 0xd7, 0xc8, 0xce, 0x5e, 0x2f, 0xbe, 0x42, 0xb7, 0xe8, 0x3c, 0x72,
	0xcf, 0xd3, 0x7f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x5e, 0x61, 0xb3, 0x1c, 0x6b, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// WxFetcherClient is the client API for WxFetcher service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type WxFetcherClient interface {
	FetchURL(ctx context.Context, in *FetchURLRequest, opts ...grpc.CallOption) (*FetchURLResponse, error)
}

type wxFetcherClient struct {
	cc *grpc.ClientConn
}

func NewWxFetcherClient(cc *grpc.ClientConn) WxFetcherClient {
	return &wxFetcherClient{cc}
}

func (c *wxFetcherClient) FetchURL(ctx context.Context, in *FetchURLRequest, opts ...grpc.CallOption) (*FetchURLResponse, error) {
	out := new(FetchURLResponse)
	err := c.cc.Invoke(ctx, "/WxFetcher/FetchURL", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// WxFetcherServer is the server API for WxFetcher service.
type WxFetcherServer interface {
	FetchURL(context.Context, *FetchURLRequest) (*FetchURLResponse, error)
}

func RegisterWxFetcherServer(s *grpc.Server, srv WxFetcherServer) {
	s.RegisterService(&_WxFetcher_serviceDesc, srv)
}

func _WxFetcher_FetchURL_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FetchURLRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WxFetcherServer).FetchURL(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/WxFetcher/FetchURL",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WxFetcherServer).FetchURL(ctx, req.(*FetchURLRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _WxFetcher_serviceDesc = grpc.ServiceDesc{
	ServiceName: "WxFetcher",
	HandlerType: (*WxFetcherServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "FetchURL",
			Handler:    _WxFetcher_FetchURL_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "wxfetcher.proto",
}
